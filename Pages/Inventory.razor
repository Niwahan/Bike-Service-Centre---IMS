@page "/inventory"
@using System.Reflection;
@using System.Text.Json;
@using NiwaCoursework.Data;
@using NiwaCoursework.Services;
@inject ISnackbar Snackbar;
<MudAppBar Color="Color.Transparent" Fixed="false" Class="mt-4">
    <MudText Typo="Typo.h5" Class="fw-bold">Inventory</MudText>
    <MudSpacer />
    @if (globalState.CurrentUser?.Role == "Admin" && showItemForm != true)
    {
        <div class="align-users-center">
            <MudButton Variant="Variant.Filled" Color="Color.Tertiary" OnClick="ShowForm">Add Items</MudButton>
        </div>
    }
</MudAppBar>
@if (showItemForm == true)
{
    <MudCard class="mt-5">
        <MudCardContent>
            <MudForm>
                <MudTextField Label="Name" @bind-Value="Name" Required="true" RequiredError="Name is required!" />
                <MudTextField Label="Quantity" @bind-Value="Quantity" Required="true" RequiredError="Quantity is required!" />

                @if (showError == true)
                {
                    <MudAlert Severity="Severity.Error">@addItemMessage</MudAlert>
                }
                <MudButton OnClick="AddItem" Variant="Variant.Filled" Color="Color.Tertiary" class="mt-3 me-2">Add Item</MudButton>
                <MudButton OnClick="HideForm" Variant="Variant.Filled" Color="Color.Tertiary" class="mt-3">Close</MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
}
@if (items.Count != 0)
{
    <MudSimpleTable Style="overflow-x: auto;">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Added Date</th>
                @if (globalState.CurrentUser?.Role == "Admin")
                {
                    <th>Actions</th>
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.AddedDate.ToString("MMM dd, yyyy h:mm tt")</td>
                    @if (globalState.CurrentUser?.Role == "Admin")
                    {
                        <td>
                            <MudButton OnClick="()=>DeleteItem(item)" Variant="Variant.Filled" Color="Color.Tertiary" class="mt-3">
                                Delete
                            </MudButton>
                        </td>
                    }

                </tr>
            }
        </tbody>
    </MudSimpleTable>
}



@code {
    ItemRequest itemRequest { get; set; }
    private string Name { get; set; }
    private int Quantity { get; set; }
    private int AddQuantity { get; set; }
    private DateTime AddedDate { get; set; }
    private Item updateItem { get; set; }
    private Item deleteItem { get; set; }
    List<Item> items { get; set; }
    bool showItemForm = false;
    bool showError = false;
    string addItemMessage = "";
    string deleteItemMessage = "";
    string updateErrorMessage = "";
    [CascadingParameter]
    GlobalState globalState { get; set; }



    protected override void OnInitialized()
    {
        items = ItemService.ReadItem();
    }
    public void ShowForm()
    {
        showItemForm = true;
    }
    public void HideForm()
    {
        showItemForm = false;
    }
    public void AddItem()
    {
        try
        {
            if (String.IsNullOrEmpty(Name) && Quantity == 0)
            {
                Snackbar.Add("Please fill the form properly!", Severity.Error);
            }
            else
            {

                AddedDate = DateTime.Now;

                items = ItemService.AddItem(Name, Quantity, AddedDate);
                Snackbar.Add("Item Added To Inventory !", Severity.Success);
            }
        }
        catch (Exception e)
        {
            showError = true;
            addItemMessage = e.Message;
        }
    }
    private void DeleteItem(Item item)
    {
        {
            try
            {
                deleteItem = item;
                deleteItemMessage = "";
                items = ItemService.DeleteItem(deleteItem.Name);
                deleteItem = null;
                Snackbar.Add("Item Deleted From Inventory !", Severity.Info);
            }
            catch (Exception e)
            {
                deleteItemMessage = e.Message;
            }
        }
    }
}
