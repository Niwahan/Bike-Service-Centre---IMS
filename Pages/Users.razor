@page "/users"
@using System.ComponentModel.DataAnnotations
@using NiwaCoursework.Data;
@using NiwaCoursework.Services;
@inject ISnackbar Snackbar


    <MudAppBar Color="Color.Transparent" Fixed="false" Class="mt-4">
        <MudText Typo="Typo.h5" Class="fw-bold">Users</MudText>
    <MudSpacer />
    <div class="align-users-center">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ShowForm">Create User</MudButton>
    </div>
</MudAppBar>

@if (showUserForm == true)
{
    <MudCard class="mt-5">
        <MudCardContent>
            <MudForm>
                <MudTextField Label="Fullname" @bind-Value="Fullname" />
                <MudTextField Label="Username" @bind-Value="Username" />
                <MudTextField Label="Password" @bind-Value="Password" InputType="InputType.Password" />
                <MudRadioGroup @bind-SelectedOption="@SelectedOption">
                    <MudRadio Option="@("Admin")" Color="Color.Primary">Admin</MudRadio>
                    <MudRadio Option="@("Staff")" Color="Color.Secondary">Staff</MudRadio>
                </MudRadioGroup>
                @if (showError == true)
                {
                    <MudAlert Severity="Severity.Error">@addUserMessage</MudAlert>
                }
                <MudButton OnClick="AddUser" Variant="Variant.Filled" Color="Color.Primary" class="mt-3 me-2">
                    Add User
                </MudButton>
                <MudButton OnClick="HideForm" Variant="Variant.Filled" Color="Color.Primary" class="mt-3">
                    Close
                </MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
}
<MudSimpleTable Style="overflow-x: auto;">
    <thead>
        <tr>
            <th>Fullname</th>
            <th>Username</th>
            <th>Role</th>
            <th>Created At</th>
            <th>Created By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Fullname</td>
                <td>@user.Username</td>
                <td>@user.Role</td>
                <td>@user.CreatedAt.ToString("MMM dd, yyyy h:mm tt")</td>
                <td>@user.CreatedBy</td>
                @if (user.Username != "admin")
                {
                    <td>
                        <MudButton Disabled="@(globalState.CurrentUser.Username == user.Username ? true : false)" OnClick="()=>DeleteUser(user)" Variant="Variant.Filled" Color="Color.Primary" class="mt-3">
                            Delete
                        </MudButton>
                    </td>
                }
                else
                {
                    <td>
                        <MudAlert Severity="Severity.Info">Super User</MudAlert>
                    </td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>



@code {
    private string Fullname { get; set; }
    private string Username { get; set; }
    private string Password { get; set; }
    private List<User> users { get; set; }
    private User deleteUser { get; set; }
    [CascadingParameter]
    GlobalState globalState { get; set; }
    public string SelectedOption { get; set; }
    private string addUserMessage = "";
    private string deleteUserMessage = "";
    bool showError = false;
    bool showUserForm = false;


    protected override void OnInitialized()
    {
        users = UserServices.Read();
    }
    public void ShowForm()
    {
        showUserForm = true;
    }
    public void HideForm()
    {
        showUserForm = false;
    }
    private void AddUser()
    {
        try
        {
            if (!String.IsNullOrEmpty(Fullname) && !String.IsNullOrEmpty(Username) && !String.IsNullOrEmpty(Password) && !String.IsNullOrEmpty(SelectedOption))
            {
                
                showError = false;
                users = UserServices.Add(globalState.CurrentUser.Username, Fullname, Username, Password, SelectedOption);
                Snackbar.Add("User Added", Severity.Success);
                
            }
            else
            {
                showError = true;
                addUserMessage = "Please fill the form properly!";
            }
        }
        catch (Exception e)
        {
            showError = true;
            addUserMessage = e.Message;
        }
    }

    private void DeleteUser(User user)
    {
        {
            try
            {
                    deleteUser = user;
                    deleteUserMessage = "";
                    users = UserServices.Delete(deleteUser.Username);
                    deleteUser = null;
            }
            catch (Exception e)
            {
                deleteUserMessage = e.Message;
            }
        }
    }
}