@page "/inventorylog"
@using NiwaCoursework.Data;
@if (isOpen == true)
{
    @if (globalState.CurrentUser?.Role == "Staff")
    {
        <MudAppBar Color="Color.Transparent" Fixed="false" Class="mb-3">
            <div><h1>Item Records</h1></div>
            <MudSpacer />
            @if (showRequestForm != true)
            {
                <div class="align-users-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ShowForm">Request Items</MudButton>
                </div>
            }
        </MudAppBar>
    }
    @if (showRequestForm == true)
    {
        <MudCard class="mt-5">
            <MudCardContent>
                <MudForm>
                    <MudSelect @bind-Value="Name" Label="Select Item" AdornmentColor="Color.Secondary">
                        @foreach (var item in items)
                        {
                            <MudSelectItem Value="@item.Name">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                    <MudTextField Label="Quantity" @bind-Value="Quantity" />
                    @if (showError == true)
                    {
                        <MudAlert Severity="Severity.Error">@reqItemMessage</MudAlert>
                    }
                    @if (successMessage == true)
                    {
                        <MudAlert Severity="Severity.Success">@reqSuccessMessage</MudAlert>
                    }
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" class="mt-3 me-2" OnClick="@RequestItem">Request</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" class="mt-3" OnClick="@HideForm">Close</MudButton>
                </MudForm>
            </MudCardContent>
        </MudCard>
    }
}

<MudAppBar Color="Color.Transparent" Fixed="false">
    <MudText Typo="Typo.h5" Class="fw-bold">Approved Item Requests</MudText>
</MudAppBar>

<MudSimpleTable Style="overflow-x: auto;" Class="mt-4">
    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Requested Date</th>
            <th>Requested By</th>
            <th>Approved Date</th>
            <th>Approved By</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var requests in itemReqs)
        {
            @if (requests.IsApproved == true)
            {
                <tr>
                    <td>@requests.Name</td>
                    <td>@requests.Quantity</td>
                    <td>@requests.RequestedDate.ToString("MMM dd, yyyy h:mm tt")</td>
                    <td>@requests.RequestedBy</td>
                    <td>@requests.ApprovedDate.ToString("MMM dd, yyyy h:mm tt")</td>
                    <td>@requests.ApprovedBy</td>
                </tr>
            }
        }
    </tbody>
</MudSimpleTable>

@code {
    [CascadingParameter]
    GlobalState globalState { get; set; }
    public string Name { get; set; }
    public int Quantity { get; set; }
    List<Item> items = ItemService.ReadItem();
    List<ItemRequest> itemReqs { get; set; }
    public string reqItemMessage = "";
    public string reqSuccessMessage = "";
    public bool isOpen { get; set; }
    bool showRequestForm = false;
    bool showError = false;
    bool successMessage = false;
    protected override void OnInitialized()
    {
        isOpen = ItemRequestService.CheckTime();
        itemReqs = ItemRequestService.ReadItemReq();
    }
    public void ShowForm()
    {
        showRequestForm = true;
    }
    public void HideForm()
    {
        Name = "";
        Quantity = 0;
        successMessage = false;
        reqItemMessage = "";
        reqSuccessMessage = "";
        showRequestForm = false;
        showError = false;
    }
    public void RequestItem()
    {
        try
        {
            if (String.IsNullOrEmpty(Name) || Quantity == 0)
            {
                showError = true;
                successMessage = false;
                reqItemMessage = "Enter the details properly!";
            }

            else
            {
                showError = false;                
                itemReqs = ItemRequestService.AddItemReq(Name, Quantity, globalState.CurrentUser.Username);
                successMessage = true;
                reqSuccessMessage = "Item Requested Successfully! Please wait for approval.";
            }

        }
        catch (Exception e)
        {
            showError = true;
            successMessage = false;
            reqItemMessage = e.Message;
        }
    }
}
